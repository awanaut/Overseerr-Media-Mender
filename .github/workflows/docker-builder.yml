name: Build and Push Docker Image

on:
  push:
    branches:
      - 'main'
      - 'dev'
  pull_request:
    branches:
      - 'main'
      - 'dev'

env:
  REGISTRY: ghcr.io
  REPO: ${{ github.repository }}
  
jobs:
  packer:
    runs-on: ubuntu-latest
    name: Build Image
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Packer
      uses: hashicorp/setup-packer@main
      with:
        version: '1.8.0'
    
    - name: Initialize Packer
      run: packer init ./packer/image.pkr.hcl

    - name: Build Docker image with Packer
      run: |
        packer build ./packer/image.pkr.hcl
        echo "Packer build completed. Listing images:"
        docker images

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Docker image
      run: |
        IMAGE_ID=${{ env.REGISTRY }}/${{ env.REPO }}
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Use Docker `latest` tag convention for main branch
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $IMAGE_ID:latest $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
        # If it's the dev branch, also push with 'dev' tag
        if [ "$VERSION" == "dev" ]; then
          docker push $IMAGE_ID:dev
        fi

    - name: Generate release tag
      id: tag
      run: |
        echo "::set-output name=release_tag::$(date +'%Y.%m.%d_%H-%M')"
    
    - name: Generate release info
      if: github.ref == 'refs/heads/main'
      id: release_info
      run: |
        DATE=$(date +'%Y.%m.%d')
        SHORT_SHA=$(git rev-parse --short HEAD)
        echo "::set-output name=date::$DATE"
        echo "::set-output name=sha::$SHORT_SHA"

    - name: Create GitHub Release
      if: github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ steps.release_info.outputs.date }}-${{ steps.release_info.outputs.sha }}
        release_name: Release ${{ steps.release_info.outputs.date }} (${{ steps.release_info.outputs.sha }})
        body: |
          Date: ${{ steps.release_info.outputs.date }}
          Commit: ${{ steps.release_info.outputs.sha }}
          
          Docker image published to GitHub Container Registry:
          ${{ env.REGISTRY }}/${{ env.REPO }}:latest
          ${{ env.REGISTRY }}/${{ env.REPO }}:${{ steps.release_info.outputs.sha }}
        draft: false
        prerelease: false